using Microsoft.Xna.Framework;
using System.Collections.Generic;
using UndyneFight_Ex;
using UndyneFight_Ex.Entities;
using UndyneFight_Ex.IO;
using UndyneFight_Ex.SongSystem;
using static UndyneFight_Ex.Fight.Functions;

namespace Rhythm_Recall.Waves
{
    public class MEGALOVANIA : IChampionShip
    {
        public MEGALOVANIA()
        {
            Game.instance = new Game();
            divisionInformation = new SaveInfo("imf{");
            divisionInformation.PushNext(new SaveInfo("dif:4"));

            difficulties = new();
            difficulties.Add("MEGALOVANIA", Difficulty.ExtremePlus);
        }
        private readonly Dictionary<string, Difficulty> difficulties = new();
        public Dictionary<string, Difficulty> DifficultyPanel => difficulties;

        public SaveInfo DivisionInformation => divisionInformation;
        public SaveInfo divisionInformation;
        public IWaveSet GameContent => new Game();
        public class Game : WaveConstructor, IWaveSet
        {
            public static bool linebool = true;
            private class ThisInformation : SongInformation
            {
                public override string BarrageAuthor => "Tlottgodinf";
                public override string AttributeAuthor => "Tlottgodinf";
                public override Dictionary<Difficulty, float> CompleteDifficulty => new(
                        new KeyValuePair<Difficulty, float>[] {
                            new(Difficulty.ExtremePlus, -1f),
                        }
                    );
                public override Dictionary<Difficulty, float> ComplexDifficulty => new(
                        new KeyValuePair<Difficulty, float>[] {
                            new(Difficulty.ExtremePlus, -1f),
                        }
                    );
                public override Dictionary<Difficulty, float> APDifficulty => new(
                        new KeyValuePair<Difficulty, float>[] {
                            new(Difficulty.ExtremePlus, -1f),
                        }
                    );
            }
            public SongInformation Attributes => new ThisInformation();
            public Game() : base(62.5f / (242 * 4 / 60f)) { }
            public static Game instance;

            public string Music => "MEGALOVANIA";
            public string FightName => "MEGALOVANIA";
            public static float bpm = 62.5f / (242 * 4 / 60f);
            public static class ImpossibleBarrage
            {
                public static void Drum1()
                {
                    float beatt = 0;
                    string[] rhythm =
                    {
                        "R","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "/","/","R","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R","/",    "/","/","/","/",

                        "/","/","R","/",    "/","/","/","/",
                        "/","/","/","/",    "R","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",

                        "R1","/","/","/",    "+01","/","/","/",
                        "+01","/","/","/",    "/","/","R1","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R1","/",    "/","/","/","/",

                        "/","/","R1","/",    "/","/","/","/",
                        "/","/","/","/",    "R1","/","/","/",
                        "+01","/","/","/",    "+01","/","/","/",
                        "+01","/","/","/",    "+01","/","/","/",

                       "R","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "/","/","R","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R","/",    "/","/","/","/",

                        "/","/","R","/",    "/","/","/","/",
                        "/","/","/","/",    "R","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",

                        "R1","/","/","/",    "+01","/","/","/",
                        "+01","/","/","/",    "/","/","R1","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R1","/",    "/","/","/","/",

                        "/","/","R1","/",    "/","/","/","/",
                        "/","/","/","/",    "R1","/","/","/",
                        "+01","/","/","/",    "+01","/","/","/",
                        "+01","/","/","/",    "+01","/","/","/",

                      "R","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "/","/","R","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R","/",    "/","/","/","/",

                        "/","/","R","/",    "/","/","/","/",
                        "/","/","/","/",    "R","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",

                        "R1","/","/","/",    "+01","/","/","/",
                        "+01","/","/","/",    "/","/","R1","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R1","/",    "/","/","/","/",

                        "/","/","R1","/",    "/","/","/","/",
                        "/","/","/","/",    "R1","/","/","/",
                        "+01","/","/","/",    "+01","/","/","/",
                        "+01","/","/","/",    "+01","/","/","/",

                       "R","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "/","/","R","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R","/",    "/","/","/","/",

                        "/","/","R","/",    "/","/","/","/",
                        "/","/","/","/",    "R","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",

                        "R1","/","/","/",    "+01","/","/","/",
                        "+01","/","/","/",    "/","/","R1","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R1","/",    "/","/","/","/",

                        "/","/","R1","/",    "/","/","/","/",
                        "/","/","/","/",    "R1","/","/","/",
                        "+01","/","/","/",    "+01","/","/","/",
                        "+01","/","/","/",    "+01","/","/","/",

                        "R","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "/","/","R","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R","/",    "/","/","/","/",

                        "/","/","R","/",    "/","/","/","/",
                        "/","/","/","/",    "R","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",

                        "R","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "/","/","R","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R","/",    "/","/","/","/",

                        "/","/","R","/",    "/","/","/","/",
                        "/","/","/","/",    "R","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",
                        "+0","/","/","/",    "+0","/","/","/",

                    };
                    for (int i = 0; i < rhythm.Length; i++)
                    {
                        if (rhythm[i] == "/") beatt += bpm * 0.5f;
                        else
                        {
                            instance.CreateArrows(bpm * 16 + beatt, 8.2f, rhythm[i]);
                            beatt += bpm * 0.5f;
                        }
                    }
                    float beat = 0;
                    string[] arrow =
                        {

                        "$0($1)($01)($3)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "$0($11)($21)($3)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                         "$0($11)($21)($3)","/","/","/",    "/","/","/","/",
                         "$0($1)($2)($3)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                         "$01($11)($2)($3)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                         "$01($1)($2)($31)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                         "$0($11)($21)($3)","/","/","/",    "/","/","/","/",
                         "/","/","/","/",    "$01($11)($2)($3)","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                         "$0($11)($21)($31)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "$0($1)($2)($31)","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "$0($1)($21)($31)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "$0($11)($21)($31)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",


                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "$0($11)($21)($3)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "$0($1)($2)($31)","/","/","/",    "/","/","/","/",
                        "$0($11)($2)($3)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "$01($1)($21)($31)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "$01($11)($2)($3)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "$0($11)($2)($3)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "$01($1)($2)($31)","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "$0($11)($21)($3)","/","/","/",    "/","/","/","/",
                        "$0($1)($2)($31)","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "$01($11)($21)($31)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",


                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",

                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",

                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",

                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",
                        "$21($21)","/","/","/",    "$01($01)","/","/","/",


                        "$21($21)","/","$01($01)","/",    "$21($21)","/","$01($01)","/",
                        "$21($21)","/","$01($01)","/",    "$21($21)","/","$01($01)","/",
                        "$21($21)","/","$01($01)","/",    "$21($21)","/","$01($01)","/",
                        "$21($21)","/","$01($01)","/",    "$21($21)","/","$01($01)","/",

                        "$21($21)","$01($01)","$21($21)","$01($01)",    "$21($21)","$01($01)","$21($21)","$01($01)",
                        "$21($21)","$01($01)","$21($21)","$01($01)",    "$21($21)","$01($01)","$21($21)","$01($01)",
                        "$21($21)","$01($01)","$21($21)","$01($01)",    "$21($21)","$01($01)","$21($21)","$01($01)",
                        "$21($21)","$01($01)","$21($21)","$01($01)",    "$21($21)","$01($01)","$21($21)","$01($01)",
            };
                    for (int i = 0; i < arrow.Length; i++)
                    {
                        if (arrow[i] == "/") beat += bpm * 0.5f;
                        else
                        {
                            instance.CreateArrows(bpm * 16 + beat, 20f, arrow[i]);
                            beat += bpm * 0.5f;
                        }
                    }

                    float beattt = 0;
                    string[] kick =
                    {
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",


                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                       "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R02","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R02(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",


                    };
                    for (int i = 0; i < kick.Length; i++)
                    {
                        if (kick[i] == "/") beattt += bpm * 0.5f;
                        else
                        {
                            instance.CreateArrows(bpm * 16 + beattt, 9f, kick[i]);
                            beattt += bpm * 0.5f;
                        }
                    }
                }
                public static void Drum2()
                {
                    float beatt = 0;
                    string[] rhythm =
                    {
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                       "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                       "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                       "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                       "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                       "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                       "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                      "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "R(R1)","/","/","/",

                       "R(R1)","/","/","/",    "R(R1)","/","/","/",
                        "R(R1)","/","/","/",    "/","/","R(R1)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","R(R1)","/",    "/","/","/","/",

                        "/","/","R(R1)","/",    "/","/","/","/",
                        "/","/","/","/",    "R(R1)","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                    };
                    for (int i = 0; i < rhythm.Length; i++)
                    {
                        if (rhythm[i] == "/") beatt += bpm * 0.5f;
                        else
                        {
                            instance.CreateArrows(bpm * 16 + beatt, 9f, rhythm[i]);
                            beatt += bpm * 0.5f;
                        }
                    }

                    float beattt = 0;
                    string[] kick =
                    {
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",
                        "R12(+012)","/","/","/",    "/","/","/","/",
                        "R02(+002)","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                    };
                    for (int i = 0; i < kick.Length; i++)
                    {
                        if (kick[i] == "/") beattt += bpm * 0.5f;
                        else
                        {
                            instance.CreateArrows(bpm * 16 + beattt, 9f, kick[i]);
                            beattt += bpm * 0.5f;
                        }
                    }
                    float beat = 0;
                    string[] arrow =
                        {

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",


                        "$01($01)($01)","/","$21($21)($21)","/",    "$01($01)($01)","/","$21($21)($21)","/",
                        "$01($01)($01)","/","$21($21)($21)","/",    "$01($01)($01)","/","$21($21)($21)","/",
                        "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",  "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",
                        "$01($01)($01)","/","$21($21)($21)","/",    "$01($01)($01)","/","$21($21)($21)","/",

                        "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",  "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",
                        "$01($01)($01)","/","$21($21)($21)","/",    "$01($01)($01)","/","$21($21)($21)","/",
                        "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",  "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",
                        "$01($01)($01)","/","$21($21)($21)","/",    "$01($01)($01)","/","$21($21)($21)","/",

                        "$01($01)($01)","/","$21($21)($21)","/",    "$01($01)($01)","/","$21($21)($21)","/",
                        "$01($01)($01)","/","$21($21)($21)","/",    "$01($01)($01)","/","$21($21)($21)","/",
                        "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",  "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",
                        "$01($01)($01)","/","$21($21)($21)","/",    "$01($01)($01)","/","$21($21)($21)","/",

                        "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",  "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",
                        "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",  "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",
                        "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",  "$21($21)($21)","$01($01)($01)","$21($21)($21)","$01($01)($01)",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "G21","/","/","/",    "G31","/","/","/",
                        "G21","/","/","/",    "/","/","G31","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","G31","/",    "/","/","/","/",

                        "/","/","G21","/",    "/","/","/","/",
                        "/","/","/","/",    "G31","/","/","/",
                        "G21","/","/","/",    "G31","/","/","/",
                        "G21","/","/","/",    "G31","/","/","/",

                        "G21","/","/","/",    "G31","/","/","/",
                        "G21","/","/","/",    "/","/","G31","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","G31","/",    "/","/","/","/",

                        "/","/","G21","/",    "/","/","/","/",
                        "/","/","/","/",    "G31","/","/","/",
                        "G21","/","/","/",    "G31","/","/","/",
                        "G21","/","/","/",    "G31","/","/","/",

                        "G21","/","/","/",    "G31","/","/","/",
                        "G21","/","/","/",    "/","/","G31","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","G31","/",    "/","/","/","/",

                        "/","/","G21","/",    "/","/","/","/",
                        "/","/","/","/",    "G31","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

            };
                    float greencount = bpm * 2f;
                    for (int i = 0; i < arrow.Length; i++)
                    {
                        if (arrow[i] == "/")
                        {
                            beat += bpm * 0.5f;
                        }
                        else if (arrow[i][0] == 'G')
                        {
                            beat += bpm * 0.5f;
                            CreateGB(new GreenSoulGB(beat + bpm * 16, "R", arrow[i][1] - '0', (arrow[i][2] - '0') * greencount));
                        }
                        else if (arrow[i] != "/")
                        {
                            instance.CreateArrows(bpm * 16 + beat, 20f, arrow[i]);
                            beat += bpm * 0.5f;
                        }
                    }
                }
                public static void Drum3()
                {
                    float beatt = 0;
                    string[] rhythm =
                    {
                        "R(+01)","/","/","/",    "/","R(+01)","/","/",
                        "/","/","/","R(+01)",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",

                        "/","/","R(+01)","/",    "/","/","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","R(+01)","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",

                        "/","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",


                        "R(+01)","/","/","/",    "/","R(+01)","/","/",
                        "/","/","/","R(+01)",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",

                        "/","/","R(+01)","/",    "/","/","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",

                       "R(+01)","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",


                        "R(+01)","/","/","/",    "/","R(+01)","/","/",
                        "/","/","/","R(+01)",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",

                        "/","/","R(+01)","/",    "/","/","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                       "R(+01)","/","/","/",    "/","R(+01)","/","/",
                        "/","/","/","R(+01)",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","R(+01)","/",    "/","/","/","/",

                        "/","/","R(+01)","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "/","/","/","/",    "/R(+01)","/","/","/",
                        "/","/","/","/",    "R(+01)","/","/","/",

                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "/","/","/","/",    "R(+01)","/","/","/",
                        "/","/","/","/",    "R(+01)","/","/","/",

                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",

                       "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "/","/","/","/",    "R(+01)","/","/","/",
                        "/","/","/","/",    "R(+01)","/","/","/",
                        "/","/","/","/",    "R(+01)","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","($0)($1)($2)($3)($01)($11)($21)($31)","/",
                        //第十六个小节
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",

                        "$0($21)","/","$1($31)","/",    "$2($01)","/","$3($11)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",

                        "/","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "/","/","R(+01)","/",
                        "/","/","/","/",    "/","/","R(+01)","/",

                        "/","/","/","/",    "/","/","R(+01)","/",
                        "/","/","/","/",    "/","/","R(+01)","/",
                        "/","/","/","/",    "/","/","R(+01)","/",
                        "/","/","/","/",    "/","/","R(+01)","/",

                        "/","/","/","/",    "/","/","R(+01)","/",
                        "/","/","/","/",    "/","/","R(+01)","/",
                        "/","/","R(+01)","/",    "/","/","R(+01)","/",
                        "/","/","R(+01)","/",    "/","/","R(+01)","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","($0)($1)($2)($3)($01)($11)($21)($31)","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",

                        "$0($21)","/","$1($31)","/",    "$2($01)","/","$3($11)","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",

                        "/","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "/","/","R(+01)","/",
                        "/","/","/","/",    "/","/","R(+01)","/",

                        "/","/","/","/",    "/","/","R(+01)","/",
                        "/","/","/","/",    "/","/","R(+01)","/",
                        "/","/","/","/",    "/","/","R(+01)","/",
                        "/","/","/","/",    "/","/","R(+01)","/",

                        "/","/","/","/",    "/","/","R(+01)","/",
                        "/","/","/","/",    "/","/","R(+01)","/",
                        "/","/","R(+01)","/",    "/","/","R(+01)","/",
                        "/","/","R(+01)","/",    "/","/","R(+01)","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",
                        "R(+01)","/","/","/",    "R(+01)","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",

                        "R(+01)","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                    };
                    for (int i = 0; i < rhythm.Length; i++)
                    {
                        if (rhythm[i] == "/") beatt += bpm * 0.5f;
                        else
                        {
                            instance.CreateArrows(bpm * 16 + beatt, 9f, rhythm[i]);
                            beatt += bpm * 0.5f;
                        }
                    }

                    float beattt = 0;
                    string[] kick =
                    {


                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",

                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                        "(R12)(+012)","/","/","/",    "/","/","/","/",
                        "(R02)(+002)","/","/","/",    "/","/","/","/",
                    };
                    for (int i = 0; i < kick.Length; i++)
                    {
                        if (kick[i] == "/") beattt += bpm * 0.5f;
                        else
                        {
                            instance.CreateArrows(bpm * 16 + beattt, 9f, kick[i]);
                            beattt += bpm * 0.5f;
                        }
                    }
                    float beat = 0;
                    string[] arrow =
                        {

                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",

                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",

                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",

                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",

                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",

                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",

                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",

                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",


                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",

                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",

                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",

                       "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",
                        "G21","/","/","/",    "/","/","/","/",

                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",

                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",

                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",
                        "G31","/","/","/",    "/","/","/","/",

                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",
                        "/","/","/","/",    "/","/","/","/",


            };
                    float greencount = bpm * 2f;
                    for (int i = 0; i < arrow.Length; i++)
                    {
                        if (arrow[i] == "/")
                        {
                            beat += bpm * 0.5f;
                        }
                        else if (arrow[i][0] == 'G')
                        {
                            beat += bpm * 0.5f;
                            CreateGB(new GreenSoulGB(beat + bpm * 16, "R", arrow[i][1] - '0', (arrow[i][2] - '0') * greencount));
                        }
                        else if (arrow[i] != "/")
                        {
                            instance.CreateArrows(bpm * 16 + beat, 20f, arrow[i]);
                            beat += bpm * 0.5f;
                        }
                    }
                }
            }
            public static class Effects
            {
                public static void Intro0_Ef()
                {
                    for (int a = 0; a < 32; a++)
                    {
                        AddInstance(new TimeRangedEvent(a * bpm * 64, bpm * 32 - 1, () =>
                           {
                               Heart.InstantSetRotation(15 * 0.02f + Heart.Rotation * 0.98f);
                           }));
                        AddInstance(new TimeRangedEvent(a * bpm * 64 + bpm * 32, bpm * 16 - 1, () =>
                        {
                            Heart.InstantSetRotation(-15 * 0.02f + Heart.Rotation * 0.98f);
                        }));
                        //AddInstance(new TIme)
                    }
                }
            }
            #region non
            public void Extreme()
            {

            }
            public void Hard()
            {

            }
            public void Normal()
            {

            }
            public void Easy()
            {

            }
            public void Noob()
            {

            }
            #endregion
            public void ExtremePlus()
            {
                if (InBeat(4))
                {
                    Heart.Shields.AddShield(new Player.Heart.Shield(2, Heart)
                    {
                        UpdateKeys = new InputIdentity[]
                        {
                            InputIdentity.ThirdRight, InputIdentity.ThirdDown, InputIdentity.ThirdLeft, InputIdentity.ThirdUp
                        }
                    });
                    Heart.Shields.AddShield(new Player.Heart.Shield(3, Heart)
                    {
                        UpdateKeys = new InputIdentity[]
                        {
                            InputIdentity.FourthRight, InputIdentity.FourthDown, InputIdentity.FourthLeft, InputIdentity.FourthUp
                        }
                    });
                    for (int a = 0; a < 4; a++)
                    {
                        for (int b = 0; b < 2; b++)
                        {
                            CreateArrow(bpm * 21, a, 20, b, 0);
                            CreateArrow(bpm * 21, a, 20, b, 2);
                        }
                    }
                    CreateGB(new GreenSoulGB(bpm * 48, 0, 0, bpm * 124));
                    CreateGB(new GreenSoulGB(bpm * 48, 2, 1, bpm * 124));
                    CreateGB(new GreenSoulGB(bpm * 48, 1, 2, bpm * 124));
                    CreateGB(new GreenSoulGB(bpm * 48, 3, 3, bpm * 124));
                    AddInstance(new InstantEvent(bpm * 20, () =>
                    {

                        Arrow[] arrow = GetAll<Arrow>();
                        for (int a = 0; a < arrow.Length; a++)
                        {
                            int x = a;
                            arrow[a].Stop(bpm * 32 - bpm * 5);
                            arrow[a].Speed = 20;
                        }
                    }));
                    AddInstance(new TimeRangedEvent(bpm * 24, () =>
                    {
                        Heart.InstantSetRotation((360 + 23) * 0.03f + Heart.Rotation * 0.97f);
                    }));
                }
                if (InBeat(164))
                {
                    ImpossibleBarrage.Drum1();
                    Effects.Intro0_Ef();
                }
                if (InBeat(164 + 16 * 24))
                {
                    ImpossibleBarrage.Drum2();
                }
                if (InBeat(164 + 16 * 48))
                {
                    ImpossibleBarrage.Drum3();
                }
            }

            public void Start()
            {
                GametimeDelta = 0.5f;
                ScreenDrawing.HPBar.HPExistColor = new(0, 161, 255);
                ScreenDrawing.HPBar.HPLoseColor = new(Color.Gray, 0.5f);
                ScreenDrawing.HPBar.AreaOccupied = new(26, 150, 18, 200);
                ScreenDrawing.HPBar.Vertical = true;
                SetBox(240, 84, 84);
                SetSoul(1);
                TP();
                Heart.Gravity = 8.2f;
                HeartAttribute.KRDamage = 10f;
                HeartAttribute.MaxHP = 10000;
                HeartAttribute.KR = true;

                /*Heart.Shields.AddShield(new Player.Heart.Shield(2,Heart)
                {
                    UpdateKeys = new Keys[] {
                            Keys.H, Keys.G, Keys.F, Keys.T
                        }
                });
                Heart.Shields.AddShield(new Player.Heart.Shield(3, Heart)
                {
                    UpdateKeys = new Keys[] {
                            Keys.L, Keys.K, Keys.J, Keys.I
                        }
                });*/
            }
        }
    }
}