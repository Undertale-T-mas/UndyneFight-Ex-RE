using Microsoft.Xna.Framework;
using UndyneFight_Ex;
using UndyneFight_Ex.Entities;
using UndyneFight_Ex.SongSystem;
using static UndyneFight_Ex.Fight.Functions;
namespace AprilExtends
{
    public class HorizonBlue : WaveConstructor, IWaveSet
    {

        public string Music => "Horizon Blue";

        public string FightName => "Horizon Blue";

        public SongImformation Attributes => null;
        public HorizonBlue() : base(62.5f / (200f / 60f)) { }
        public static HorizonBlue instance;
        public static float bpm = 62.5f / (800f / 60f);
        public void Easy()
        {

        }
        public void arrow1()
        {
            float beat = 0;
            string[] arrow =
            {
                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "R","/","+001","/",   "+001","/","+001","/",

                 "($001)($201)($011)($211)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R)(R1)","/","/","/",

                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                 "(R)(R1)","/","/","/",   "(R)(R1)","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R)(R1)","/","/","/",

                 "(R)(R1)","/","/","/",   "(R)(R1)","/","/","/",
                 "(R)(R1)","/","/","/",   "(R)(R1)","/","/","/",
                 "(R)(R1)","/","/","/",   "(R)(R1)","/","/","/",

                 "($0)($2)","/","($11)($31)","/",   "($0)($2)","/","($11)($31)","/",
                 "($0)($2)","/","($11)($31)","/",   "($0)($2)","/","($11)($31)","/",
                 "/","/","/","/",   "($101)($301)($111)($311)","/","/","/",

                 "/","/","($101)($301)($111)($311)","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",

                 //后面还可以加
            };
            for (int i = 0; i < arrow.Length; i++)
            {
                if (arrow[i] == "/")
                {
                    beat += bpm * 0.5f;
                }
                else if (arrow[i] != "/")
                {
                    CreateArrows(beat, 7f, arrow[i]);
                    beat += bpm * 0.5f;
                }
            }
        }
        public void arrow2()
        {
            float beat = 0;
            string[] arrow =
            {
                 "/","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "(R1)","/","/","/",   "/","/","/","/",
                 //后面还可以加
                 "/","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "R","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "R","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "R","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "(R1)","/","/","/",   "/","/","/","/",
                 //后面还可以加
            };
            for (int i = 0; i < arrow.Length; i++)
            {
                if (arrow[i] == "/")
                {
                    beat += bpm * 0.5f;
                }
                else if (arrow[i] != "/")
                {
                    CreateArrows(bpm * 16 + beat, 6f, arrow[i]);
                    beat += bpm * 0.5f;
                }
            }
        }
        public void arrow3()
        {
            float beat = 0;
            string[] arrow =
            {
                 "/","/","/","/",   "/","/","/","/",
                 "(R)","/","/","/",   "(R)","/","/","/",
                 "(R)(R1)(+21)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "(R1)","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "(R1)","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)(+21)","/","/","/",   "R","/","/","/",

                 "R","/","/","/",   "(R1)","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "R","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "(R1)","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "(R1)(+21)","/","/","/",   "/","/","/","/",
                 //后面还可以加
                 "/","/","/","/",   "/","/","/","/",
                 "(R)","/","/","/",   "(R)","/","/","/",
                 "(R)(R1)(+21)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "(R1)","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "(R1)","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)(+21)","/","/","/",   "R","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)(+21)","/","/","/",   "R","/","/","/",

                 "R","/","/","/",   "(R1)","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "R","/","/","/",
                 "R(R1)(+21)","/","/","/",   "R","/","/","/",

                 "R","/","/","/",   "(R1)","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",
                 //后面还可以加
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "R(R1)(+21)","/","/","/",   "/","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "R(R1)(+21)","/","/","/",   "/","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",
                 "R(R1)(+21)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",

                 "($00)($211)","/","($10)($311)","/",   "($20)($011)","/","($30)($111)","/",
                 "($00)($211)","/","($10)($311)","/",   "($20)($011)","/","($30)($111)","/",
                 "($00)($211)","/","($10)($311)","/",   "($20)($011)","/","($30)($111)($30)($111)","/",
            };
            for (int i = 0; i < arrow.Length; i++)
            {
                if (arrow[i] == "/")
                {
                    beat += bpm * 0.5f;
                }
                else if (arrow[i] != "/")
                {
                    CreateArrows(bpm * 16 + beat, 7f, arrow[i]);
                    beat += bpm * 0.5f;
                }
            }
        }
        public void arrow4()
        {
            float beat = 0;
            string[] arrow =
            {
                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","(R1)","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","(R1)","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "R","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","(R1)","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","(R1)","/",
                 "(R1)","/","/","/",   "/","/","/","/",

                 "($201)($201)","/","+101","/",   "+101","/","+101","/",
                 "+101","/","+101","/",   "+101","/","+101","/",
                 "/","/","/","/",   "(R1)","/","/","/",

                 //后面还可以加
                "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","(R1)","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","(R1)","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "R","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","(R1)","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","(R1)","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "($201)($201)","/","+101","/",   "+101","/","+101","/",
                 "+101","/","+101","/",   "+101","/","+101","/",
                 "+101","/","+101","/",   "+101","/","+101","/",

                 "($201)($201)","/","+101","/",   "+101","/","+101","/",
                 "+101","/","+101","/",   "+101","/","+101","/",
                 "/","/","/","/",   "(R1)","/","/","/",

                 //后面还可以加

            };
            for (int i = 0; i < arrow.Length; i++)
            {
                if (arrow[i] == "/")
                {
                    beat += bpm * 0.5f;
                }
                else if (arrow[i] != "/")
                {
                    CreateArrows(bpm * 16 + beat, 7f, arrow[i]);
                    beat += bpm * 0.5f;
                }
            }
        }
        public void arrow5()
        {
            float beat = 0;
            string[] arrow =
            {
                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","(R1)","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","(R1)","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "R","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","(R1)","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","(R1)","/",
                 "(+01)","/","/","/",   "/","/","/","/",

                 "($201)($201)","/","+101","/",   "+101","/","+101","/",
                 "+101","/","+101","/",   "+101","/","+101","/",
                 "/","/","/","/",   "(R1)","/","/","/",

                 //后面还可以加
                "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "(R1)","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "(+01)(R)","/","/","/",   "R","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "(R1)","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "R(R1)","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "(+01)(R)","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","/","/",
                 "R(R1)","/","/","/",   "(R1)","/","/","/",
                 "R(R1)","/","/","/",   "(R1)","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",
                 "R","/","/","/",   "/","/","/","/",

                 "EF1","R","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",

                 //后面还可以加

            };
            for (int i = 0; i < arrow.Length; i++)
            {
                if (arrow[i] == "/")
                {
                    beat += bpm * 0.5f;
                }
                if (arrow[i] == "EF1")
                {
                    AddInstance(new TimeRangedEvent(bpm * 16 + beat, 1, () =>
                    {
                        ScreenDrawing.WhiteOut(bpm * 5);
                        ScreenDrawing.SceneRendering.InsertProduction(new ScreenDrawing.Shaders.RGBSplitting());
                        AddInstance(new TimeRangedEvent(1000, () =>
                        {
                            if (Gametime % 5 == 0)
                                ScreenDrawing.BoundColor = Color.Lerp(ScreenDrawing.BoundColor, Color.LightBlue * 0.6f, 0.02f);
                        }));
                        Heart.Shields.AddShield(new Player.Heart.Shield(2, Heart)
                        {
                            UpdateKeys = new InputIdentity[]
                            {
                            InputIdentity.ThirdRight, InputIdentity.ThirdDown, InputIdentity.ThirdLeft, InputIdentity.ThirdUp
                            }
                        });
                        Heart.Shields.AddShield(new Player.Heart.Shield(3, Heart)
                        {
                            UpdateKeys = new InputIdentity[]
                            {
                            InputIdentity.FourthRight, InputIdentity.FourthDown, InputIdentity.FourthLeft, InputIdentity.FourthUp
                            }
                        });
                    }));
                }
                else if (arrow[i] != "/")
                {
                    CreateArrows(bpm * 16 + beat, 7f, arrow[i]);
                    beat += bpm * 0.5f;
                }
            }
        }
        public void arrow6()
        {
            float beat = bpm * 8;
            string[] arrow =
            {
                 "G323","$3($3)","/","/","/",   "/","/","/","/",
                 "G001","$0($0)","/","/","/",   "/","/","/","/",
                 "G211","$21($21)","/","/","/",   "/","/","/","/",

                 "G133","$11($11)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R)(R1)","/","/","/",

                 "SR01","SR11","/","/","/","/",   "/","/","/","/",
                 "SR01","SR11","/","/","/","/",   "/","/","/","/",
                 "SR01","SR11","/","/","/","/",   "/","/","/","/",

                 "G003","G213","($0)($21)","/","/","/",   "/","/","/","/",
                 "$0","/","$0","/",   "$0","/","$0","/",
                 "$21","/","$21","/",   "$21","/","$21","/",

                 "G323","$3($3)","/","/","/",   "/","/","/","/",
                 "G001","$0($0)","/","/","/",   "/","/","/","/",
                 "G211","$21($21)","/","/","/",   "/","/","/","/",

                 "G133","$11($11)","/","/","/",   "/","/","/","/",
                 "G001","$0($0)","/","/","/",   "/","/","/","/",
                 "G211","$21($21)","/","/","/",   "/","/","/","/",

                 "SR01","SR11","/","/","/","/",   "/","/","/","/",
                 "SR01","SR11","/","/","/","/",   "/","/","/","/",
                 "SR01","SR11","/","/","/","/",   "/","/","/","/",

                 "SR01","SR11","/","/","/","/",   "/","/","/","/",
                 "SR01","SR11","/","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R)(R1)","/","/","/",
                 // first
                 "G323","$3($3)","/","/","/",   "/","/","/","/",
                 "G001","$0($0)","/","/","/",   "/","/","/","/",
                 "G211","$21($21)","/","/","/",   "/","/","/","/",

                 "G133","$11($11)","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R)(R1)","/","/","/",

                 "SR01","SR11","/","/","/","/",   "/","/","/","/",
                 "SR01","SR11","/","/","/","/",   "/","/","/","/",
                 "SR01","SR11","/","/","/","/",   "/","/","/","/",

                 "G003","G213","($0)($21)","/","/","/",   "/","/","/","/",
                 "$0","/","$0","/",   "$0","/","$0","/",
                 "$21","/","$21","/",   "$21","/","$21","/",

                 "G323","$3($3)","/","/","/",   "/","/","/","/",
                 "G001","$0($0)","/","/","/",   "/","/","/","/",
                 "G211","$21($21)","/","/","/",   "/","/","/","/",

                 "G133","$11($11)","/","/","/",   "/","/","/","/",
                 "G001","$0($0)","/","/","/",   "/","/","/","/",
                 "G211","$21($21)","/","/","/",   "/","/","/","/",

                 "SR01","SR11","/","/","/","/",   "/","/","/","/",
                 "SR01","SR11","/","/","/","/",   "/","/","/","/",
                 "SR01","SR11","/","/","/","/",   "/","/","/","/",

                 "SR02","SR12","/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 // second
                 "(R)(R1)(R)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                "(R)(R1)(R)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   " (R1)","/","/","/",

                 "(R)(R1)(R)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                "(R)(R1)(R)","/","/","/",  "(R1)","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R1)","/","/","/",

                 "(R)(R1)(R)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                "(R)(R1)(R)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R1)","/","/","/",

                 "(R)(R1)(R)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                "(R)(R1)(R)","/","/","/",  "(R1)","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R1)","/","/","/",
                 // third
                 
                 // fourth

            };
            for (int i = 0; i < arrow.Length; i++)
            {
                if (arrow[i] == "/")
                {
                    beat += bpm * 0.5f;
                }
                else if (arrow[i][0] == 'G')
                {
                    SetPlayerMission(0);
                    CreateGB(new GreenSoulGB(beat, arrow[i][1] - '0', arrow[i][2] - '0', (arrow[i][3] - '0') * bpm * 4 - 8));
                }
                else if (arrow[i][0] == 'S')
                {
                    SetPlayerMission(0);
                    int way = Rand(0, 3);
                    CreateGB(new GreenSoulGB(beat, way, arrow[i][2] - '0', (arrow[i][3] - '0') * bpm * 4 - 8));
                    CreateArrow(beat, way, 7f, arrow[i][2] - '0', 0);
                }
                else if (arrow[i] != "/")
                {
                    CreateArrows(beat, 7f, arrow[i]);
                    beat += bpm * 0.5f;
                }
            }
        }
        public void arrow7()
        {
            float beat = bpm * 16;
            string[] arrow =
            {
                 "($0)($1)($2)","/","/","/",   "R1","/","/","/",
                 "($0)($1)($2)","/","/","/",   "R1","/","/","/",
                 "($0)($1)($2)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",

                 "($0)($3)($2)","/","/","/",   "R1","/","/","/",
                 "($0)($3)($2)","/","/","/",   "R1","/","/","/",
                 "($0)($3)($2)","/","/","/",   "/","/","/","/",

                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",

                 "R(R1)","/","/","/",   "/","/","R(R1)","/",
                 "/","/","/","/",    "R(R1)","/","/","/",
                 "/","/","($0)($1)($2)","/",  "($01)($11)($21)","/","($0)($1)($2)","/",

                 "($01)($11)($21)","/","/","/",   "/","/","R(R1)","/",
                 "/","/","/","/",    "R(R1)","/","/","/",
                 "/","/","($0)($1)($2)","/",  "($01)($11)($21)","/","($0)($1)($2)","/",

                 "($01)($11)($21)","/","/","/",  "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",

                 "EF","/","/","/",  "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",

            };
            for (int i = 0; i < arrow.Length; i++)
            {
                if (arrow[i] == "/")
                {
                    beat += bpm * 0.5f;
                }
                else if (arrow[i][0] == 'G')
                {
                    SetPlayerMission(0);
                    CreateGB(new GreenSoulGB(beat, arrow[i][1] - '0', arrow[i][2] - '0', (arrow[i][3] - '0') * bpm * 4 - 8));
                }
                else if (arrow[i][0] == 'S')
                {
                    SetPlayerMission(0);
                    int way = Rand(0, 3);
                    CreateGB(new GreenSoulGB(beat, way, arrow[i][2] - '0', (arrow[i][3] - '0') * bpm * 4 - 8));
                    CreateArrow(beat, way, 7f, arrow[i][2] - '0', 0);
                }
                else if (arrow[i] == "EF")
                {
                    DelayBeat(beat / bpm / 4, () => { ScreenDrawing.MakeFlicker(Color.White * 0.5f); });
                    CreateArrow(beat, 3, 10, 0, 0);
                }
                else if (arrow[i] != "/")
                {
                    CreateArrows(beat, 7f, arrow[i]);
                    beat += bpm * 0.5f;
                }
            }
        }
        public void arrow8()
        {
            float beat = bpm * 16;
            string[] arrow =
            {
                 "(R)(R1)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R)","/","/","/",

                 "(R)(R1)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","+0","/",   "+0","/","+0","/",
                 "(R)(R1)","/","+0","/",   "(R)(R1)","/","+0","/",

                  "(R)(R1)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                  "(R)(R1)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                  "(R)(R1)","/","/","/",  "(R1)","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R1)","/","/","/",

                  "(R)(R1)","/","/","/",  "(R1)","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R)(R1)","/","/","/",
                 //first
                 "(R)(R1)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "(R)","/","/","/",

                 "(R)(R1)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","+0","/",   "+0","/","+0","/",
                 "(R)(R1)","/","+0","/",   "(R)(R1)","/","+0","/",

                  "(R)(R1)","/","/","/",  "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",
                 "(R)(R1)","/","/","/",   "/","/","/","/",

                  "(R)(R1)","/","/","/",  "(+01)","/","(+01)","/",
                 "(R)(R1)","/","/","/",   "(R1)","/","/","/",
                 "(R)(R1)","/","(+01)","/",  "(+01)","/","(+01)","/",

                 "(R)(R1)","/","/","/",   "(+01)","/","(+01)","/",
                 "T",
                 "(R)(R1)","/","/","/",  "(+01)","(+01)","(+01)","(+01)",

                 "R","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",
                 "/","/","/","/",   "/","/","/","/",

                 "R","/","/","/",   "/","/","/","/",
            };
            for (int i = 0; i < arrow.Length; i++)
            {
                if (arrow[i] == "/")
                {
                    beat += bpm * 0.5f;
                }
                else if (arrow[i][0] == 'G')
                {
                    SetPlayerMission(0);
                    CreateGB(new GreenSoulGB(beat, arrow[i][1] - '0', arrow[i][2] - '0', (arrow[i][3] - '0') * bpm * 4 - 8));
                }
                else if (arrow[i][0] == 'S')
                {
                    SetPlayerMission(0);
                    int way = Rand(0, 3);
                    CreateGB(new GreenSoulGB(beat, way, arrow[i][2] - '0', (arrow[i][3] - '0') * bpm * 4 - 8));
                    CreateArrow(beat, way, 7f, arrow[i][2] - '0', 0);
                }
                else if (arrow[i] == "T")
                {
                    SetPlayerMission(0);
                    CreateArrow(beat, "R", 7f, 0, 0);
                    CreateArrow(beat, "R", 7f, 1, 0);
                    CreateArrow(beat + bpm * 2f, "+0", 7f, 1, 0);
                    CreateArrow(beat + bpm * 2.666f, "+0", 7f, 1, 0);
                    CreateArrow(beat + bpm * 3.333f, "+0", 7f, 1, 0);
                    beat += bpm * 4f;
                }
                else if (arrow[i] != "/")
                {
                    CreateArrows(beat, 7f, arrow[i]);
                    beat += bpm * 0.5f;
                }
            }
        }
        public void Extreme()
        {
            if (GametimeF == 0f)
            {
                //InstantSetBox(-1000, 84, 84);

                Extends.DrawingUtil.SpecialBox box = new(114514, 0, Heart);
                CreateEntity(box);
                float time = 0;
                float x = 0;
                ForBeat(1145, () =>
                {
                    x += 2f;
                    time += 360 / bpm / 48;
                    box.rotate = Sin(time) * Sin(time) * Cos(time) * 160 + x;

                });
                arrow1();

            }
            if (InBeat(3 * 7))
            {
                arrow2();
            }
            if (InBeat(3 * 23))
            {
                arrow3();
            }
            if (InBeat(3 * 46 - 1))
            {
                arrow4();
            }
            if (InBeat(3 * 62 - 1))
            {
                arrow5();
            }
            if (InBeat(3 * 79 - 2))
            {
                arrow6();
            }
            if (InBeat(3 * 103 - 4))
            {
                arrow7();
            }
            if (InBeat(3 * 111 - 4))
            {
                arrow8();
            }
        }

        public void ExtremePlus()
        {

        }

        public void Hard()
        {

        }

        public void Noob()
        {

        }

        public void Normal()
        {

        }
        public void Start()
        {
            GametimeDelta = -0.5f;
            FightBox.instance.GreenSoulAlpha = 0f;
            HeartAttribute.MaxHP = 24;
            HeartAttribute.DamageTaken = 2;
            SetBox(240, 84, 84);
            SetSoul(1);
            TP(320, 240);
            /*
             Heart.GiveForce(90, 3);//将心旋转到90度（带有缓动）并且施加一个3的加速度
            Heart.GiveInstantForce(90, 3);//将心旋转到90度（不带有缓动）并且施加一个3的加速度
            Heart.InstantSetRotation(90);//瞬间将心旋转到90度
            Heart.Merge(player1);//合并心player1，与分心有关
            Heart.Split();//心的分心
            HeartAttribute.ArrowFixed = true;//箭头不会因为绿色灵魂的角度而跟着旋转
            HeartAttribute.DamageTaken = 1;//玩家每次被攻击受到的伤害
            HeartAttribute.Gravity = 10f;//重力，默认9.8f
            HeartAttribute.HP = 10;//设置玩家血量
            HeartAttribute.JumpSpeed = 7f;//跳跃时获得的初速度（默认为6）
            HeartAttribute.JumpTimeLimit = 3;//跳跃次数
            HeartAttribute.KR = false;//KR的开关
            HeartAttribute.KRDamage = 1f;//KR的伤害
            HeartAttribute.MaxHP = 12f;//设置最大HP
            HeartAttribute.PurpleLineCount = 4;//当玩家为紫心时，线条的数量
            HeartAttribute.Speed = 3f;//决心的移动速度，默认2.5f
            HeartAttribute.SoftFalling = false;//蓝色灵魂是否采用软降落模式（更丝滑但时间会待得更长）
            HeartAttribute.UmbrellaAvailable = false;//滑翔伞开关
            HeartAttribute.UmbrellaSpeed = 1f;//滑翔伞速度，默认1f
            TP();//无参数为将决心移动到中心
            TP(320, 240);//移动到320，240（中心）
            TP(new Vector2(320,240));//移动到320，240（中心）;
            InstantTP(new Vector2(320, 240));//不带有缓动的TP，可以用来做动画效果的移动心
            SetBox(240, 84, 84);//设置一个y为240，高宽均为84的框(标准绿魂框)
            SetBox(new Vector2(320, 240), 84, 84);//设置一个x为320y为240，高宽均为84的框(标准绿魂框)
            SetBox(320 - 42, 320 + 42, 240 - 42, 240 + 42);//设置一个左上角坐标为320-42,240-42，右下角为320+42,240+42的框(标准绿魂框)
            InstantSetBox(new Vector2(320, 240), 84, 84);//不带有缓动的SetBox，可以用来做动画效果的移动心
            SetSoul(1);//设置灵魂状态。0表示红，1表示绿，2表示蓝，3表示橙，4表示紫，5表示灰
            */
        }
    }
}