using Extends;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using System.Collections.Generic;
using UndyneFight_Ex;
using UndyneFight_Ex.Entities;
using UndyneFight_Ex.SongSystem;
using static UndyneFight_Ex.Entities.EasingUtil;
using static UndyneFight_Ex.Entities.SimplifiedEasing;
using static UndyneFight_Ex.Fight.Functions;
using static UndyneFight_Ex.Fight.Functions.ScreenDrawing.Shaders;

namespace Rhythm_Recall.Waves
{
    internal class QZKago : IChampionShip
    {
        Dictionary<string, Difficulty> dif = new();
        public QZKago()
        {
            dif.Add("Div.3", Difficulty.Easy);
            dif.Add("Div.2", Difficulty.Normal);
            dif.Add("Div.1", Difficulty.Extreme);
        }
        public IWaveSet GameContent => new Project();
        public Dictionary<string, Difficulty> DifficultyPanel => dif;
        class Project : WaveConstructor, IWaveSet
        {
            public Project() : base(62.5f / (257f / 60f)) { }
            public string Music => "QZKago Requiem";
            public string FightName => "QZKago Requiem";
            public SongInformation Attributes => new Information();
            class Information : SongInformation
            {
                public override string SongAuthor => "t+pazolite";
                public override string BarrageAuthor => "2.Kvon.0";
                public override string AttributeAuthor => "On.or.Kz";
                public Information() { this.MusicOptimized = true; }
                public override Dictionary<Difficulty, float> CompleteDifficulty => new(
                    new KeyValuePair<Difficulty, float>[]
                    {
                        new(Difficulty.Easy,0f),
                        new(Difficulty.Normal,0f),
                        new(Difficulty.Extreme,0f),
                    }
                );
                public override Dictionary<Difficulty, float> ComplexDifficulty => new(
                    new KeyValuePair<Difficulty, float>[]
                    {
                        new(Difficulty.Easy,0f),
                        new(Difficulty.Normal,0f),
                        new(Difficulty.Extreme,0f),
                    }
                );
                public override Dictionary<Difficulty, float> APDifficulty => new(
                    new KeyValuePair<Difficulty, float>[]
                    {
                        new(Difficulty.Easy,0f),
                        new(Difficulty.Normal,0f),
                        new(Difficulty.Extreme,0f),
                    }
                );
            }
            public static Game game;
            GlobalResources.Effects.StepSampleShader StepSample;
            private bool notRegistered = true;
            ScreenDrawing.Shaders.Blur Blur;
            RenderProduction production, production1, production2;
            ScreenDrawing.Shaders.RGBSplitting splitter = new();
            GlobalResources.Effects.PolarShader Polar;
            public void Easy()
            {

            }

            public void Extreme()
            {
                if (InBeat(2))
                {
                    RegisterFunctionOnce("Line1", () =>
                    {
                        int a = -1;
                        for (int i = 0; i < 3; i++)
                        {
                            DelayBeat(i * 0.25f, () =>
                            {
                                Line l = new(LinkEase(
                                    EaseOut(BeatTime(1), new Vector2(Arguments[0] + a * 60 * Arguments[1], 240), new Vector2(Arguments[0] + a * 60 * Arguments[1] + 80 * Arguments[1], 240), EaseState.Quad),
                                    Stable(BeatTime(1.5f), new Vector2(Arguments[0] + a * 60 * Arguments[1] + 80 * Arguments[1], 240))),
                                    Stable(BeatTime(2.5f), 90 + 28 * Arguments[1]))
                                { Alpha = 0.67f };
                                CreateEntity(l);
                                DelayBeat(0.25f, () => { l.AlphaDecrease(BeatTime(2.25f), 0.7f); });
                                DelayBeat(2.5f, () => { l.Dispose(); });
                                a++;
                            });
                        }
                    });
                    RegisterFunctionOnce("Cl", () =>
                    {
                        ScreenDrawing.CameraEffect.Convulse(1, BeatTime(2), true);
                        ScreenDrawing.CameraEffect.SizeShrink(0.07f, BeatTime(1));
                    });
                    RegisterFunctionOnce("Cr", () =>
                    {
                        ScreenDrawing.CameraEffect.Convulse(1, BeatTime(2), false);
                        ScreenDrawing.CameraEffect.SizeShrink(0.07f, BeatTime(1));
                    });
                    RegisterFunctionOnce("Shrink", () =>
                    {
                        ScreenDrawing.CameraEffect.SizeShrink(0.4f, BeatTime(1));
                    });
                    RegisterFunctionOnce("Line2", () =>
                    {
                        Line l = new(EaseIn(BeatTime(4), new Vector2(280, 240), new Vector2(0, 240), EaseState.Sine),
                            Stable(BeatTime(4), 90));
                        CreateEntity(l);
                        l.TransverseMirror = true;
                        for (int i = 0; i < 5; i++)
                        {
                            l.InsertRetention(new(i * BeatTime(0.125f), 1 - i * 0.15f));
                        }
                        l.AlphaDecrease(BeatTime(4), 1);
                        DelayBeat(4, () => { l.Dispose(); });
                    });
                    CreateChart(BeatTime(2), BeatTime(1), 6.5f, new string[]
                    {
                        "(#3#+21)($0)(<640,-1>Line1)(Cl)","","","",    "","","","",    "d","","","",    "","","","",
                        "d","","","",    "","","","",    "d","","","",    "","","","",
                        //
                        "(#3#+2)(d1)(<0,1>Line1)(Cr)","","","",    "","","","",    "d1","","","",    "","","","",
                        "","","","",    "","","","",    "d1","","","",    "","","","",
                        //
                        "(#3#+21)(d)(<480,-1>Line1)(Cl)","","","",    "","","","",    "d","","","",    "","","","",
                        "d","","","",    "","","","",    "d","","","",    "","","","",
                        //
                        "(#3#+2)(d1)(<160,1>Line1)(Cr)","","","",    "","","","",    "d1","","","",    "","","","",
                        "d1","","","",    "","","","",    "d1","","","",    "","","","",
                        ////16
                        "(#3#+2)(d1)(<320,-1>Line1)(Cl)","","","",    "","","","",    "d1","","","",    "","","","",
                        "d1","","","",    "","","","",    "d1","","","",    "","","","",
                        //
                        "(#3#+21)(d)(<320,1>Line1)(Cr)","","","",    "","","","",    "d","","","",    "","","","",
                        "","","","",    "","","","",    "d","","","",    "","","","",
                        //
                        "(#3#+2)(d1)(<160,-1>Line1)(Cl)","","","",    "","","","",    "d1","","","",    "","","","",
                        "d1","","","",    "","","","",    "d1","","","",    "","","","",
                        //
                        "~+01'1.4","","~+01'1.4","",    "~+01'1.4","","~+01'1.4","",    "~+01'1.4","","","",    "~+01'1.4","","","",
                        "(~+01'1.4)(*+0)","","","",    "~+01'1.4","","","",    "*d","","","",    "","","","",
                        ////32
                        "(#3#+01)($0)(Line2)(Shrink)","","","",    "","","","",    "d","","","",    "","","","",
                        "d","","","",    "","","","",    "d","","","",    "","","","",
                        //
                        "(#3#+0)(d1)(<0,1>Line1)(Cr)","","","",    "","","","",    "d1","","","",    "","","","",
                        "","","","",    "","","","",    "d1","","","",    "","","","",
                        //
                        "(#3#+01)(d)(<160,1>Line1)(Cr)","","","",    "","","","",    "d","","","",    "","","","",
                        "d","","","",    "","","","",    "d","","","",    "","","","",
                        //
                        "(#3#+0)(d1)(<320,1>Line1)(Cr)","","","",    "","","","",    "d1","","","",    "","","","",
                        "d1","","","",    "","","","",    "d1","","","",    "","","","",
                        ////48
                        "(#3#+0)(d1)(<480,1>Line1)(Cr)","","","",    "","","","",    "d1","","","",    "","","","",
                        "d1","","","",    "","","","",    "d1","","","",    "","","","",
                        //
                        "(#3#+01)(d)(<480,-1>Line1)(Cl)","","","",    "","","","",    "d","","","",    "","","","",
                        "d","","","",    "","","","",    "d","","","",    "","","","",
                        //
                        "(#3#+0)(d1)(<160,-1>Line1)(Cl)","","","",    "","","","",    "d1","","","",    "","","","",
                        "d1","","","",    "","","","",    "d1","","","",    "","","","",
                        //
                        "*d","","","",    "*+0","","","",    "*d1","","","",    "*+01","","","",
                        "(*$2)(*$01)","","(~_$2'1.4)(~_$01'1.4)","",    "(~_$2'1.4)(~_$01'1.4)","","(~_$2'1.4)(~_$01'1.4)","",    "(~_$2'1.4)(~_$01'1.4)","","(~_$2'1.4)(~_$01'1.4)","",    "(~_$2'1.4)(~_$01'1.4)","","(~_$2'1.4)(~_$01'1.4)","",
                        ////64
                    });
                }
                if (InBeat(4 * 16))
                {
                    RegisterFunctionOnce("Line1", () =>
                    {
                        float a = -(Arguments[2] - 1f) / 2f;
                        for (int i = 0; i < Arguments[2]; i++)
                        {
                            DelayBeat(0.125f * i, () =>
                            {
                                Line l = new(Stable(BeatTime(2), new Vector2(320 + a * 32 * Arguments[0]* Arguments[3], 240 + a * 24 * Arguments[0] )), Stable(BeatTime(2), Arguments[1])) { Alpha = 0.67f };
                                CreateEntity(l);
                                l.AlphaDecrease(BeatTime(2), 0.7f);
                                DelayBeat(2, () => { l.Dispose(); });
                                a++;
                            });
                        }
                    });
                    CreateChart(BeatTime(4), BeatTime(2), 7f, new string[]
                    {
                        "*d","","*+0","",    "*d1","","*+01","",    "*d","","*+0","",    "$11","-11","+11","-11",
                        "+11","","$1","+1",    "-1","","*+0","",    "*d1","","*+01","",    "$2","-1","+1","-1",
                        //
                        "+1","","*+0","",    "*d1","","*+01","",    "*d","","*+0","",    "$01","+11","-11","+11",
                        "-11","","*+01","",    "!!8","+01(<2,-45,5,1>Line1)","+01'1.8","+01","+01'1.8","+01","","","",    "!!8","*d","","","","+0(<-3,90,3,1>Line1)","+0'1.8","+0","",    "!!8","+0","","","","*d1(<-2,45,5,-1>Line1)","+01'1.8","+01","+01'1.8",
                        //
                        "+01","","+01","",    "*d","","*+0","",    "*d1","","*+01","",    "$1","+1","-1","+1",
                        "-1","","$11","-11",    "+11","","*+01","",    "*d","","*+0","",    "$21","-11","+11","-11",
                        //
                        "+11","","*+01","",    "!!8","+01(<-2,-45,5,1>Line1)","+01'1.8","+01","+01'1.8","+01","","","",    "!!8","*d","","","","+0(<3,90,3,1>Line1)","+0'1.8","+0","",    "!!8","+0","","","","*$31(<2,45,5,-1>Line1)","+01'1.8","+01","+01'1.8",
                        "(+2)(+21)","","-1","",    "(+1)(+21)","","-1","",    "(+1)(+21)","","","",    "($101)($311)","","","",
                        ////32
                        "*d","","*+0","",    "*d1","","*+01","",    "*d","","*+0","",    "$11","-11","+11","-11",
                        "+11","","$1","+1",    "-1","","*+0","",    "*d1","","*+01","",    "$2","-1","+1","-1",
                        //
                        "+1","","*+0","",    "*d1","","*+01","",    "*d","","*+0","",    "$01","+11","-11","+11",
                        "-11","","*+01","",    "!!8","+01(<-2,45,5,-1>Line1)","+01'1.8","+01","+01'1.8","+01","","","",    "!!8","*d","","","","+0(<3,90,3,1>Line1)","+0'1.8","+0","",    "!!8","+0","","","","*d1(<2,-45,5,1>Line1)","+01'1.8","+01","+01'1.8",
                        //
                        "($2)($3)","","($2)($3)","",    "($2)($3)","","($2)($3)","",    "($2)($3)","","($2)($3)","",    "*$31","","","",
                        "($01)($11)","","($01)($11)","",    "($01)($11)","","($01)($11)","",    "*$0","","","",    "*$01","","","",
                        //
                        "(*$31)(*$1)","","(*$31)(*$1)","",    "(*$21)(*$0)","","(*$21)(*$0)","",    "(*$11)(*$3)","","(*$11)(*$3)","",    "(*$01)(*$2)","","(*$01)(*$2)","",
                        "($01)($31)","","","",    "($1)($2)","","","",    "($01)($21)","","","",    "($001)($201)","","","",
                        ////64
                    });
                }
                if (InBeat(4 * 32))
                {
                    CreateChart(BeatTime(4), BeatTime(1), 7, new string[]
                    {
                        "(#0.3#d)","","","",    "(+01)","","","",    "(#0.3#d)","","","",    "(+01)","","","",
                        "(#0.3#d)","","","",    "(+01)","","","",    "(#0.3#d)","","","",    "(+01)","","","",
                        //
                        "(#0.3#d)","","","",    "(+01)","","","",    "(#0.3#d)","","","",    "(+01)","","","",
                        "(#0.3#d)","","","",    "(+01)","","","",    "(#0.3#d)","","","",    "(+01)","","","",
                        //
                        "(#7.2#$1)","","","",    "","","","",    "$2","","","",    "","","","",
                        "$3","","","",    "","","","",    "$0","","","",    "","","","",
                        //
                        "$3","","","",    "","","","",    "$2","","","",    "","","","",
                        "$3","","","",    "","","","",    "($1)($1)","","","",    "","","","",
                        ////16
                        "(#0.3#d1)","","","",    "(+0)","","","",    "(#0.3#d1)","","","",    "(+0)","","","",
                        "(#0.3#d1)","","","",    "(+0)","","","",    "(#0.3#d1)","","","",    "(+0)","","","",
                        //
                        "(#0.3#d1)","","","",    "(+0)","","","",    "(#0.3#d1)","","","",    "(+0)","","","",
                        "(#0.3#d1)","","","",    "(+0)","","","",    "(#0.3#d1)","","","",    "(+0)","","","",
                        //
                        "(#3.7#$11)","","","",    "","","","",    "$01","","","",    "","","","",
                        "$31","","","",    "","","","",    "$21","","","",    "","","","",
                        //
                        "(#1.7#$11)","","","",    "","","","",    "$3","","","",    "","","","",
                        "(#1.7#$1)","","","",    "","","","",    "$31","","","",    "","","","",
                        ////32
                        "(#1.3#$21)(#1.3#$3)","","","",    "","","","",    "","","","",    "(#1.3#$21)(#1.3#$0)","","","",
                        "","","","",    "","","","",    "(#1.3#$11)(#1.3#$0)","","","",    "","","","",
                        //
                        "","","","",    "(#1.3#$01)(#1.3#$0)","","","",    "+01","","","",    "","","","",
                        "+0","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "(#1.7#$1)","","","",    "","","","",    "$21","","","",    "","","","",
                        "(#1.7#$11)","","","",    "","","","",    "$0","","","",    "","","","",
                        //
                        "(*N11)(*-1)","","","",    "(*+0)","","","",    "(*+0)(*+11)","","","",    "(*+01)","","","",
                        "(+01)(+01)","","","",    "","","","",    "(+2)(+0)","","","",    "","","","",
                        ////48
                        "(#0.3#d1)","","","",    "(+0)","","","",    "(#0.3#d1)","","","",    "(+0)","","","",
                        "(#0.3#d1)","","","",    "(+0)","","","",    "(#0.3#d1)","","","",    "(+0)","","","",
                        //
                        "$01","","","",    "$2","","","",    "$31","","","",    "$3","","","",
                        "($01)($01)","","","",    "($2)($2)","","","",    "($31)($31)","","","",    "($3)($3)","","","",
                        //
                        "(#4#$01)","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "(#4#$3)","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        ////64
                    });
                }
                if (InBeat(4 * 48))
                {
                    CreateChart(BeatTime(4), BeatTime(1), 7, new string[]
                    {
                        "(#4#$31)","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "+01","","","",    "","","","",    "*+01","","","",    "","","","",
                        "*+01","","","",    "","","","",    "*+01","","","",    "","","","",
                        //
                        "(#4#$1)","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "+0","","","",    "","","","",    "*+0","","","",    "","","","",
                        "*+0","","","",    "","","","",    "*+0","","","",    "","","","",
                        ////16
                        "(#4#$21)","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "+01","","","",    "","","","",    "*+01","","","",    "","","","",
                        "*+01","","","",    "","","","",    "*+01","","","",    "","","","",
                        //
                        "(#4#$0)","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "+0","","","",    "","","","",    "*+0","","","",    "","","","",
                        "*+0","","","",    "","","","",    "*+0","","","",    "","","","",
                        ////32
                        "*d1","~_!+01","~_+01","~_!+01",    "(~_+01)(*+1)","~_!+0","~_+0","~_!+0",    "(~_+0)(*-11)","~_!+01","~_+01","~_!+01",    "(~_+01)(*+1)","~_!+0","~_+0","~_!+0",
                        "(~_+0)(*-11)","~_!+01","~_+01","~_!+01",    "","","","",    "(+11)(+2)","","","",    "","","","",
                        //
                        "(#3#d)(*-11)","~_!+01","~_+01","~_!+01",    "~_+01","~_!+01","~_+01","~_!+01",    "+01","","","",    "","","","",
                        "*+01","","","",    "*+01","","","",    "*+01","","","",    "","","","",
                        //
                        "*d","~_!+0","~_+0","~_!+0",    "(~_+0)(*+11)","~_!+01","~_+01","~_!+01",    "(~_+01)(*-1)","~_!+0","~_+0","~_!+0",    "(~_+0)(*+11)","~_!+01","~_+01","~_!+01",
                        "(~_+01)(*-1)","~_!+0","~_+0","~_!+0",    "","","","",    "(-1)(-21)","","","",    "","","","",
                        //
                        "(#3#d1)(*+1)","~_!+0","~_+0","~_!+0",    "~_+0","~_!+0","~_+0","~_!+0",    "+0","","","",    "","","","",
                        "*+0","","","",    "*+0","","","",    "*+0","","","",    "","","","",
                        ////48
                        "(d)(+11)","","","",    "","","","",    "-1","","","",    "+11","","","",
                        "-2","","","",    "-11","","","",    "+0","","","",    "+11","","","",
                        //
                        "(*+01)(*-1)","","","",    "+21","","","",    "+1","","","",    "+01","","","",
                        "(+0)(+211)","","","",    "","","","",    "(+001)(+21)","","","",    "","","","",
                        //
                        "(#0.75#$2)","","","",    "","","","",    "-1","","","",    "","","","",
                        "(#0.75#$01)","","","",    "","","","",    "+01","","","",    "","","","",
                        //
                        "(#1.5#$0)","","","",    "","","","",    "","","","",    "(#1#$21)","","","",
                        "","","","",    "(#1#$3)","","","",    "","","","",    "","","","",
                        ////64
                    });
                }
                if (InBeat(4 * 64))
                {
                    CreateChart(BeatTime(4), BeatTime(1), 7, new string[]
                    {
                        "(d)(+21)","","","",    "","","","",    "(d)(+11)","","","",    "*+01","","","",
                        "","","","",    "(d1)(+1)","","","",    "*+0","","","",    "","","","",
                        //
                        "-1","","","",    "-1","","","",    "-1","","","",    "-1","","","",
                        "(*+0)(*-11)","","","",    "(*+1)(*-11)","","","",    "(*+1)(*-11)","","","",    "","","","",
                        //
                        "(d1)(+2)","","","",    "","","","",    "d","","","",    "(*+0)(+11)","","","",
                        "","","","",    "d1","","","",    "(*+01)(+1)","","","",    "","","","",
                        //
                        "($2)($01)","","","",    "*+01","","","",    "*$3","","*$31","",    "*$3","","*$31","",
                        "*$3","","","",    "","","","",    "($21)($0)","","","",    "","","","",
                        ////16
                        "(d1)(+2)","","","",    "","","","",    "(d1)(-1)","","","",    "*+0","","","",
                        "","","","",    "(d)(-11)","","","",    "*+01","","","",    "","","","",
                        //
                        "+11","","","",    "+11","","","",    "+11","","","",    "+11","","","",
                        "(d)(+0)","~_!+0","~_+0","~_!+0",    "~_+0","~_!+0","~_+0","~_!+0",    "(d1)(+01)","~_!+01","~_+01","~_!+01",    "~_+01","~_!+01","~_+01","~_!+01",
                        //
                        "(d)(+21)","","","",    "","","","",    "d1","","","",    "(*+01)(+1)","","","",
                        "","","","",    "d","","","",    "(*+0)(+11)","","","",    "","","","",
                        //
                        "($01)($01)($01)","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        ////32
                        "(d)(+21)","","","",    "","","","",    "(d)(-11)","","","",    "*+01","","","",
                        "","","","",    "(d1)(-1)","","","",    "*+0","","","",    "","","","",
                        //
                        "+1","","","",    "+1","","","",    "+1","","","",    "+1","","","",
                        "(*+0)(*+11)","","","",    "(*-1)(*+11)","","","",    "(*-1)(*+11)","","","",    "","","","",
                        //
                        "(d1)(+2)","","","",    "","","","",    "d","","","",    "(*+0)(-11)","","","",
                        "","","","",    "d1","","","",    "(*+01)(-1)","","","",    "","","","",
                        //
                        "($01)($2)","","","",    "*+0","","","",    "*$31","","*$3","",    "*$31","","*$3","",
                        "*$31","","","",    "","","","",    "($21)($0)","","","",    "","","","",
                        ////48
                        "(d1)(+2)","","","",    "","","","",    "(d1)(+1)","","","",    "*+0","","","",
                        "","","","",    "(d)(+11)","","","",    "*+01","","","",    "","","","",
                        //
                        "($31)($01)","","","",    "($31)($01)","","","",    "($31)($01)","","","",    "($31)($01)","","","",
                        "","","","",    "","","","",    "","","","",    "(#0.5#$2)","","","",
                        //
                        "","","(#0.5#$2)","",    "","","","",    "(#0.5#$2)","","","",    "","","","",
                        "","","","",    "","","(#12#$31)($11)","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        ////64
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        ////
                        "","","","",    "","","","",    "d","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        ////
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                    });
                }
                if (InBeat(4 * 89))
                {
                    CreateChart(BeatTime(4), BeatTime(1), 7, new string[]
                    {
                        "d","","","",    "","","","",    "d","","","",    "","","","",
                        "d","","","",    "","","","",    "d","","","",    "","","","",
                        //
                        "d","","","",    "","","","",    "d","","","",    "+011","","","",
                        "","","","",    ">d1","","","",    "","","","",    "d","","","",
                        //
                        "+011","","","",    "","","","",    "d1","","","",    "","","","",
                        "d1","","","",    "","","","",    "d1","","","",    "","","","",
                        //
                        "d1","","","",    "","","","",    "d1","","","",    "+001","","","",
                        "","","","",    "<d","","","",    "","","","",    "d1","","","",
                        ////16
                        "+001","","","",    "","","","",    "d","","","",    "","","","",
                        "d","","","",    "","","","",    "d","","","",    "","","","",
                        //
                        "d","","","",    "","","","",    "d","","","",    "+011","","","",
                        "","","","",    "<$01","","","",    ">-11","","","",    "<+11","","","",
                        //
                        ">-11","","","",    "","","","",    "d1","","","",    "","","","",
                        "d1","","","",    "","","","",    "d1","","","",    "+001","","","",
                        ///
                        "+0","","","",    "","","","",    "d","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        ////32
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "(#7.5#d1)(*d)","","","",    "","","","",    "*>+0","","","",    "","","","",
                        //
                        "*<+0","","","",    "","","","",    "*>+0","","","",    "","","","",
                        "*<+0","","","",    "","","","",    "*>+0","","","",    "","","","",
                        //
                        "*<+0","","","",    "","","","",    "*>+0","","","",    "","","","",
                        "(#7.5#d)(*d1)","","","",    "","","","",    "*>+01","","","",    "","","","",
                        //
                        "*<+01","","","",    "","","","",    "*>+01","","","",    "","","","",
                        "*<+01","","","",    "","","","",    "*>+01","","","",    "","","","",
                        ////48
                        "*<+01","","","",    "","","","",    "*>+01","","","",    "","","","",
                        "(#3.5#d1)(*d)","","","",    "","","","",    "*+1","","","",    "","","","",
                        //
                        "*-1","","","",    "","","","",    "*+1","","","",    "","","","",
                        "(#3.5#d)(*d1)","","","",    "","","","",    "*-11","","","",    "","","","",
                        //
                        "*+11","","","",    "","","","",    "*-11","","","",    "","","","",
                        "(>$21)(<$0)","","","",    "$3","","","",    "$2","","","",    "$1","","","",
                        //
                        "($21)($0)","","","",    "$31","","","",    "$01","","","",    "$11","","","",
                        "(<$21)(>$0)","","","",    "","","","",    "","","","",    "","","","",
                        ////64
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "*$01","~_+01","~_+01","~_+01",    "~_+01","","","",    "*$01","~_+01","~_+01","~_+01",    "~_+01","","","",
                        "*$01","~_+01","~_+01","~_+01",    "~_+01","","","",    "*$01","~_+01","~_+01","~_+01",    "~_+01","","","",
                        //
                    });
                }
                if (InBeat(4 * 107))
                {
                    CreateChart(BeatTime(4), BeatTime(1), 7, new string[]
                    {
                        "(#0.3#d)","","","",    "(+21)","","","",    "(#0.3#d)","","","",    "(+21)","","","",
                        "(#0.3#d)","","","",    "(+21)","","","",    "(#0.3#d)","","","",    "(+21)","","","",
                        //
                        "(#0.3#d)","","","",    "(+21)","","","",    "(#0.3#d)","","","",    "(+21)","","","",
                        "(#0.3#d)","","","",    "(+21)","","","",    "N0","","-1","",    "+1","","-1","",
                        //
                        "(#0.3#d1)","","","",    "(+2)","","","",    "(#0.3#d1)","","","",    "(+2)","","","",
                        "(#0.3#d1)","","","",    "(+2)","","","",    "(#0.3#d1)","","","",    "(+2)","","","",
                        //
                        "(#0.3#d1)","","","",    "","","","",    "<$3","",">-1","",    "<+1","",">-1","",
                        "(#1#+1)(*d1)","","","",    "*+01","","","",    "*+01","","","",    "","","","",
                        ////16
                        "(#0.75#$1)(+11)","","","",    "","","","",    "(#0.75#$2)(+11)","","","",    "","","","",
                        "(#0.75#$3)(+11)","","","",    "","","","",    "*+01","","","",    "*+01","","","",
                        //
                        "","","","",    "N1","","","",    "-1","","","",    "-1","","","",
                        "(+1)(*+11)","","","",    "*+01","","","",    "(+1)(*-11)","","","",    "","","","",
                        //
                        "(d)(d1)","","","",    "","","","",    "(d)(d1)","","","",    "d1","","","",
                        "(d1)(d)","","","",    "d","","","",    "(d)(d1)","","","",    "d1","","","",
                        //
                        "(d)(*-11)","","","",    "*+01","","","",    "(*+01)(*+1)","","","",    "*+0","","","",
                        "(*+0)(*-11)","","","",    "","","","",    "","","","",    "","","","",
                        ////32
                        "(#0.3#d1)","","","",    "(+2)","","","",    "(#0.3#d1)","","","",    "(+2)","","","",
                        "(#0.3#d1)","","","",    "(+2)","","","",    "(#0.3#d1)","","","",    "(+2)","","","",
                        //
                        "(#0.3#d1)","","","",    "(+2)","","","",    "(#0.3#d1)","","","",    "(+2)","","","",
                        "(#0.3#d1)","","","",    "(+2)","","","",    "N2","","+11","",    "-11","","+11","",
                        //
                        "(#0.3#d)","","","",    "(+21)","","","",    "(#0.3#d)","","","",    "(+21)","","","",
                        "(#0.3#d)","","","",    "(+21)","","","",    "(#0.3#d)","","","",    "(+21)","","","",
                        //
                        "(#0.3#d)","","","",    "","","","",    ">$31","","<+11","",    ">-11","","<+11","",
                        "(#1#-11)(*d)","","","",    "*+0","","","",    "*+0","","","",    "","","","",
                        ////48
                        "(#0.75#$11)(-1)","","","",    "","","","",    "(#0.75#$01)(-1)","","","",    "","","","",
                        "(#0.75#$31)(-1)","","","",    "","","","",    "*+0","","","",    "*+0","","","",
                        //
                        "","","","",    "N31","","","",    "+11","","","",    "+11","","","",
                        "(-11)(*-1)","","","",    "*+0","","","",    "(-11)(*+1)","","","",    "","","","",
                        //
                        "(d)(d1)","","","",    "","","","",    "(d1)(d)","","","",    "d","","","",
                        "(d)(d1)","","","",    "d1","","","",    "(d1)(d)","","","",    "d","","","",
                        //
                        "(*d)(*+1)","","","",    "","","","",    "(*+01)(*-1)","","","",    "","","","",
                        "(*+0)(*+11)","","","",    "","","","",    "","","","",    "","","","",
                        ////64
                    });
                }
                if (InBeat(4 * 123))
                {
                    CreateChart(BeatTime(4), BeatTime(1), 7, new string[]
                    {
                        "(N3)(+1)","","","",    "(-1)(+1)","","","",    "*-1","","","",    "(N31)(-11)","","","",
                        "(+11)(-11)","","","",    "*+11","","","",    "(*$0)(*$21)","","$1","",    "(*$0)(*$21)","","","",
                        //
                        "*$11","","","",    "(*$21)(*$0)","","*$11","",    "(*$21)(*$0)","","","",    "*$1","","","",
                        "(*$01)(*$2)","","","",    "(*$01)(*$2)","","","",    "*$3","","*$31","",    "*$3","","*$31","",
                        //
                        "(N31)(-11)","","","",    "(+11)(-11)","","","",    "*+11","","","",    "(N3)(+1)","","","",
                        "(-1)(+1)","","","",    "*-1","","","",    "(*$21)(*$0)","","*$11","",    "(*$21)(*$0)","","","",
                        //
                        "*$1","","","",    "(*$0)(*$21)","","$1","",    "(*$0)(*$21)","","","",    "*$11","","","",
                        "(*$01)(*$2)","","($1)($11)","",    "(*$01)(*$2)","","","",    "(*$01)(*$2)","","","",    "","","","",
                        ////16
                        "(*$2)(N21)","","","$2",    "(*$1)","","","$1",    "(*$2)(N21)","","","$2",    "(*$1)","","","$1",
                        "(*$2)(N21)","","","$2",    "(*$1)","","","$1",    "(*$2)(N21)","","","$2",    "(*$1)(N11)","","","$1",
                        //
                        "(*$2)","","","$2",    "(*$1)(N11)","","","$1",    "(*$2)(N21)","","","$2",    "(*$1)(N11)","","","$1",
                        "(*$2)(N21)","","","$2",    "(*$1)","","","$1",    "(*$2)(N21)","","","$2",    "(*$1)","","","$1",
                        //
                        "(*$2)(N21)","","","$2",    "(*$1)","","","$1",    "(*$2)(N21)","","","$2",    "(*$1)","","","$1",
                        "(*$2)(N21)","","","$2",    "(*$1)","","","$1",    "(*$2)(N21)","","","",    "","","","",
                        //
                        "(*$31)(*$0)","","","",    "*$31","","","",    "(*$31)(*$0)","","","",    "*$0","","","",
                        "(*$31)(*$0)","","~_!$31","",    "~_$31","","~_!$31","",    "~_$31","","","",    "","","","",
                        ////32
                        "(N0)(-1)","","","",    "(+1)(-1)","","","",    "*+1","","","",    "(N21)(+11)","","","",
                        "(-11)(+11)","","","",    "*-11","","","",    "(*$21)(*$0)","","*$11","",    "(*$21)(*$0)","","","",
                        //
                        "*$1","","","",    "(*$0)(*$21)","","$1","",    "(*$0)(*$21)","","","",    "*$11","","","",
                        "(*$01)(*$2)","","","",    "(*$01)(*$2)","","","",    "*$31","","*$3","",    "*$31","","*$3","",
                        //
                        "(N21)(+11)","","","",    "(-11)(+11)","","","",    "*-11","","","",    "(N0)(-1)","","","",
                        "(+1)(-1)","","","",    "*+1","","","",    "(*$0)(*$21)","","$1","",    "(*$0)(*$21)","","","",
                        //
                        "*$11","","","",    "(*$21)(*$0)","","*$11","",    "(*$21)(*$0)","","","",    "*$1","","","",
                        "(*$01)(*$2)","","($1)($11)","",    "(*$01)(*$2)","","","",    "(*$01)(*$2)","","","",    "","","","",
                        ////48
                        "(d)(d1)","","","",    "*+01","","","",    "(d1)(d)","","","",    "*+0","","","",
                        "(d)(d1)","","","",    "*+01","","","",    "($0)($1)","","","",    "($11)($21)","","","",
                        //
                        "($0)($1)","","","",    "$2","","$1","",    "$2","","","",    "*$3","","","",
                        "*$01","","","",    "*$3","","","",    "$01","","$11","",    "$01","","$11","",
                        //
                        "$01","","","",    "*$31","","*$3","",    "","","$2","",    "$3","","$2","",
                        "($3)($01)","","","",    "($2)($31)","","","",    "($3)($01)","","","",    "($2)($31)","","","",
                        //
                        "(#0.7#$3)(#0.7#$01)","","","",    "","","","",    "(#0.7#$2)(#0.7#$31)","","","",    "","","","",
                        "$31","$01","$1","$2",    "$31","$01","$1","$2",    "$31","$01","$1","$2",    "$31","$01","$1","$2",
                        ////64
                    });
                }
                if (InBeat(4 * 139))
                {
                    CreateChart(BeatTime(4), BeatTime(1), 7, new string[]
                    {
                        "$2","","$31","",    "*$2","","*$31","",    "*$2","","*$31","",    "*$2","","*$31","",
                        "*$2","","*$31","",    "*$2","","*$31","",    "*$2","","*$01","",    "*$2","","*$01","",
                        //
                        "*$2","","*$01","",    "*$2","","*$01","",    "*$2","","*$01","",    "*$2","","*$01","",
                        "*$2","","*$01","",    "*$2","","*$01","",    "*$2","","*$01","",    "*$2","","*$01","",
                        //
                        "*$1","","*$01","",    "*$1","","*$01","",    "*$1","","*$01","",    "*$1","","*$01","",
                        "*$1","","*$01","",    "*$1","","*$01","",    "*$1","","","",    "+0","","","",
                        //
                        "(+0)(d1)","","","",    "d1","","","",    "(+01)(d)","","","",    "d","","","",
                        "(+0)(d1)","","","",    "d1","","","",    "($01)($2)","","","",    "","","","",
                        ////16
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        ////32
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        ////48
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        //
                        "","","","",    "","","","",    "","","","",    "","","","",
                        "","","","",    "","","","",    "","","","",    "","","","",
                        ////64
                    });
                }
            }

            public void ExtremePlus()
            {

            }

            public void Hard()
            {

            }

            public void Noob()
            {

            }

            public void Normal()
            {

            }
            public void Start()
            {
                production = Blur = new Blur(0.505f);
                production1 = new Filter(FightResources.Shaders.StepSample, 0.51f);
                splitter = new RGBSplitting(0.9f) { Disturbance = false };
                StepSample = FightResources.Shaders.StepSample;
                Blur.Sigma = 0f;
                StepSample.Intensity = 0.0f;
                StepSample.CentreX = 320f;
                StepSample.CentreY = 240f;
                splitter.Intensity = 0.0f;
                ScreenDrawing.SceneRendering.InsertProduction(production);
                ScreenDrawing.SceneRendering.InsertProduction(production1);
                ScreenDrawing.SceneRendering.InsertProduction(splitter);

                SetSoul(1);
                InstantTP(new(320, 240));
                SetGreenBox();
                HeartAttribute.MaxHP = 16;
                ScreenDrawing.HPBar.HPLoseColor = Color.DarkBlue;
                ScreenDrawing.HPBar.HPExistColor = Color.Blue * 0.7f;
                Settings.GreenTap = true;
                HeartAttribute.ArrowFixed = true;

                GametimeDelta = -0.01f;
                bool jump = true;
                if (jump)
                {
                    int beat = 4 * 16;
                    //int beat = 4 * 15;
                    GametimeDelta = BeatTime(-4 + beat);
                    PlayOffset = BeatTime(beat - 4);
                    ScreenDrawing.ScreenScale = 1f;
                }
            }
        }
    }
}
