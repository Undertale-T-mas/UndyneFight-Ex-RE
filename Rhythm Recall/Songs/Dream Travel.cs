using Microsoft.Xna.Framework;
using System;
using System.Collections.Generic;
using UndyneFight_Ex;
using UndyneFight_Ex.Entities;
using UndyneFight_Ex.IO;
using UndyneFight_Ex.SongSystem;
using static UndyneFight_Ex.Entities.SimplifiedEasing;
using static UndyneFight_Ex.Fight.Functions;
using static UndyneFight_Ex.Fight.Functions.ScreenDrawing.Shaders;
using static UndyneFight_Ex.FightResources;

namespace Rhythm_Recall.Waves
{
    internal class DreamTravel : IChampionShip
    {
        Dictionary<string, Difficulty> dif = new();
        public DreamTravel()
        {
            dif.Add("Div.3", Difficulty.Easy);
            dif.Add("Div.2", Difficulty.Hard);
            dif.Add("Div.1", Difficulty.Extreme);
        }
        public IWaveSet GameContent => new Project();
        public Dictionary<string, Difficulty> DifficultyPanel => dif;
        class Project : WaveConstructor, IWaveSet
        {
            public Project() : base(62.5f / (200f / 60f)) { }
            public string Music => "Dream Travel";
            public string FightName => "Dream Travel";
            public SongInformation Attributes => new Information();
            class Information : SongInformation
            {
                public override string SongAuthor => "";
                public override string BarrageAuthor => "Dream.T";
                public override string AttributeAuthor => "Dream.T";
                public Information() { this.MusicOptimized = true; }
                public override Dictionary<Difficulty, float> CompleteDifficulty => new(
                new KeyValuePair<Difficulty, float>[]
                {
 
                    new(Difficulty.Easy,0f),
                    new(Difficulty.Hard,0f),
                    new(Difficulty.Extreme,0f),

                }
                );
                public override Dictionary<Difficulty, float> ComplexDifficulty => new(
                    new KeyValuePair<Difficulty, float>[]
                    {
                        new(Difficulty.Easy,0f),
                    new(Difficulty.Hard,0f),
                    new(Difficulty.Extreme,0f),

                    }
                    );
                public override Dictionary<Difficulty, float> APDifficulty => new(
                    new KeyValuePair<Difficulty, float>[]
                    {
                        new(Difficulty.Easy,0f),
                    new(Difficulty.Hard,0f),
                    new(Difficulty.Extreme,0f),

                    }
                    );
            }
            private float T(float beat)
            {
                return BeatTime(beat);
            }
            public void Start()
            {
                RegisterFunction("Con", () =>
                {
                    ScreenDrawing.CameraEffect.Convulse(Arguments[0], T(Arguments[1]), Arguments[2] == 0);
                });
                RegisterFunction("SSS", () =>
                {
                    var r = LinkEase(Stable(0, ScreenDrawing.ScreenScale), EaseOut(T(Arguments[0]), ScreenDrawing.ScreenScale, Arguments[1], EaseState.Quad));
                    RunEase((s) => { ScreenDrawing.ScreenScale = s; }, r);
                });
                RegisterFunction("SCP", () =>
                {
                    var r = LinkEase(Stable(0, ScreenDrawing.ScreenPositionDelta), EaseOut(T(Arguments[0]) - 1, ScreenDrawing.ScreenPositionDelta, new(Arguments[1], Arguments[2]), EaseState.Quad));
                    RunEase((s) => { ScreenDrawing.ScreenPositionDelta = s; }, r);
                });
                RegisterFunction("SSA", () =>
                {
                    var r = LinkEase(Stable(0, ScreenDrawing.ScreenAngle), EaseOut(T(Arguments[0]), ScreenDrawing.ScreenAngle, Arguments[1], EaseState.Quad));
                    RunEase((s) => { ScreenDrawing.ScreenAngle = s; }, r);
                });
                Settings.GreenTap = true;
                GametimeDelta = -1.5f;
                InstantSetGreenBox();
                SetSoul(1);
                InstantTP(320, 240);
                bool delay = false;
                var beat = T(124);
                if (delay)
                {
                    PlayOffset = beat;
                    GametimeDelta += beat
                        ;
                }
            }
            public void Easy()
            {
                
            }

            public void Extreme()
            {
                if (InBeat(0))
                {
                    CreateChart(0, T(1), 6.5f, new string[]
                    {
                        "(#1#$2)(*$2'1.2)", "", "", "",         "(*$01)", "", "", "",
                        "(#1#$2)(*$2'1.2)", "", "", "",         "(*$01)", "", "", "",
                        "(#1#$2)(*$2'1.2)", "", "", "",         "(*$01)", "", "", "",
                        "", "", "", "",         "(R1)", "", "", "",

                        "", "", "", "",         "(R1)", "", "", "",
                        "", "", "", "",         "(R1)", "", "", "",
                        "", "", "", "",         "(R1)", "", "", "",
                        "(R1)", "", "", "",         "(R1)", "", "", "",

                        "(#1#$01)(*$01'1.2)", "", "", "",         "(*$2)", "", "", "",
                        "(#1#$01)(*$01'1.2)", "", "", "",         "(*$2)", "", "", "",
                        "(#1#$01)(*$01'1.2)", "", "", "",         "(*$2)", "", "", "",
                        "", "", "", "",         "(R)", "", "", "",

                        "", "", "", "",         "(R)", "", "", "",
                        "", "", "", "",         "(R)", "", "", "",
                        "", "", "", "",         "(R)", "", "", "",
                        "(R)", "", "", "",         "(R)", "", "", "",

                        "(#1#$2)(*$2'1.2)", "", "", "",         "(*$01)", "", "", "",
                        "(#1#$2)(*$2'1.2)", "", "", "",         "(*$01)", "", "", "",
                        "(#1#$2)(*$2'1.2)", "", "", "",         "(*$01)", "", "", "",
                        "", "", "", "",         "(R1)", "", "", "",

                        "", "", "", "",         "(R1)", "", "", "",
                        "", "", "", "",         "(R1)", "", "", "",
                        "", "", "", "",         "(R1)", "", "", "",
                        "(R1)", "", "", "",         "(R1)", "", "", "",

                        "(#1#$01)(*$01'1.2)", "", "", "",         "(*$2)", "", "", "",
                        "(#1#$01)(*$01'1.2)", "", "", "",         "(*$2)", "", "", "",
                        "(#1#$01)(*$01'1.2)", "", "", "",         "(*$2)", "", "", "",
                        "(R)", "", "", "",         "(R)", "", "", "",

                        "(R)", "", "(+0)", "",         "(+0)", "", "", "",
                        "(R)", "", "", "",         "(R)", "", "", "",
                        "(R)", "", "", "",         "(R)", "", "(+0)", "",
                        "(+0)", "", "", "",         "(R)", "", "", "",
                    });
                }
                if (InBeat(28))
                {
                    CreateChart(T(4), T(1), 6.5f, new string[]
                    {
                        "($0)($21)", "", "", "",         "D1", "", "", "",
                        "($1)($31)", "", "", "",         "D1", "", "", "",
                        "($2)($01)", "", "", "",         "D1", "", "", "",
                        "", "", "", "",         "($3)($11)", "", "", "",

                        "", "", "", "",         "($31)($1)", "", "", "",
                        "", "", "", "",         "($3)($11)", "", "", "",
                        "", "", "", "",         "(D)(+01)", "", "", "",
                        "(D)(+01)", "", "", "",         "(D)(+01)", "", "", "",

                        "($01)($2)", "", "", "",         "D", "", "", "",
                        "($11)($3)", "", "", "",         "D", "", "", "",
                        "($21)($0)", "", "", "",         "D", "", "", "",
                        "", "", "", "",         "($31)($1)", "", "", "",

                        "", "", "", "",         "($3)($11)", "", "", "",
                        "", "", "", "",         "($31)($1)", "", "", "",
                        "", "", "", "",         "(D)(+01)", "", "", "",
                        "(D)(+01)", "", "", "",         "(D)(+01)", "", "", "",

                        "(#0.5#$0)(*+0'1.2)", "", "", "",         "(#0.5#$11)(*+01'1.2)", "", "", "",
                        "(#0.5#$2)(*+0'1.2)", "", "", "",         "(#1#$31)(*+01'1.2)", "", "", "",
                        "", "", "", "",         "(#0.5#$0)(*+0'1.2)", "", "", "",
                        "(#0.5#$11)(*+01'1.2)", "", "", "",         "(#0.5#$2)(*+0'1.2)", "", "", "",

                        "(#0.5#$31)(*+01'1.2)", "", "", "",         "R", "", "R1", "",
                        "(#1.5#$0)(*+0'1.2)", "", "", "",         "", "", "", "",
                        "", "", "", "",         "+0", "", "", "",
                        "+01", "", "", "",         "$2", "", "$11", "",

                        "(*$0)(*$1)", "", "", "",         "*$0", "", "", "",
                        "(*$0)(*$1)", "", "", "",         "*$0", "", "", "",
                        "(*$0)(*$1)(*$11)(*$21)", "", "", "",         "*$21", "", "", "",
                        "(*$11)(*$21)", "", "", "",         "*$21", "", "", "",

                        "(*$11)(*$21)(*$0'1.2)", "", "(*$21'1.2)", "",         "(*$0'1.2)", "", "(*$21'1.2)", "",
                        "(*$01'1.2)", "", "(*$2'1.2)", "",         "(*$01'1.2)", "", "(*$2'1.2)", "",
                        "!!3/12","($31'1.5)", "($3'1.5)","($31'1.5)", "($31'1.5)","($3'1.5)", "($31'1.5)",
                        "($3'1.5)", "($3'1.5)","($31'1.5)", "($31'1.5)","($3'1.5)", "($31'1.5)",                 
                    });
                }
                if (InBeat(60))
                {
                    CreateChart(T(4), T(1), 6.5f, new string[]
                    {
                        "(#1.3#R)(*+0'1.2)(#1.3#D1)(*+01'1.2)", "", "", "",         "", "", "", "",
                        "", "", "", "",         "(#1.3#R)(*+0'1.2)(#1.3#D1)(*+01'1.2)", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "(#2#R)(*+0'1.2)(#1.8#D1)(*+01'1.2)", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "D1", "", "", "",         "", "", "", "",
                        "R", "", "+01", "",         "(+0)(D1)", "", "", "",
                        "(D)(D1)", "", "", "",         "(D)(D1)", "", "", "",

                        "(#1.3#R)(*+0'1.2)(#1.3#D1)(*+01'1.2)", "", "", "",         "", "", "", "",
                        "", "", "", "",         "(#1.3#R)(*+0'1.2)(#1.3#D1)(*+01'1.2)", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "(#2#R)(*+0'1.2)(#1.8#D1)(*+01'1.2)", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "D1", "", "", "",         "", "", "", "",
                        "R", "", "+01", "",         "(+0)(D1)", "", "", "",
                        "(D)(D1)", "", "", "",         "(D)(D1)", "", "", "",

                        "(#1.3#R)(*+0'1.2)(#1.3#D1)(*+01'1.2)", "", "", "",         "", "", "", "",
                        "", "", "", "",         "(#1.3#R)(*+0'1.2)(#1.3#D1)(*+01'1.2)", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "(#2#R)(*+0'1.2)(#1.8#D1)(*+01'1.2)", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "D1", "", "", "",         "", "", "", "",
                        "R", "", "+01", "",         "(+0)(D1)", "", "", "",
                        "(D)(D1)", "", "", "",         "(D)(D1)", "", "", "",

                        "(#1.3#R)(*+0'1.2)(#1.3#D1)(*+01'1.2)", "", "", "",         "", "", "", "",
                        "", "", "", "",         "(#1.3#R)(*+0'1.2)(#1.3#D1)(*+01'1.2)", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "(#2#R)(*+0'1.2)(#1.8#D1)(*+01'1.2)", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "D1", "", "", "",         "", "", "", "",
                        "$0", "", "+1", "",         "+1", "", "+1", "",
                        "+1", "", "+1", "",         "+1", "", "+1", "",
                    });
                }
                if (InBeat(92))
                {
                    int way1 = Rand(0, 3);
                    int way2 = Rand(0, 3);
                    CreateChart(T(4), T(1), 7f, new string[]
                    {
                        $"*${way1}1", "", $"*${way2+0}", "",         $"*${way1}1", "", $"*${way2+1}", "",
                        $"*${way1}1", "", $"*${way2+2}", "",         $"*${way1}1", "", $"*${way2+3}", "",
                        $"*${way1}1", "", $"*${way2+0}", "",         $"*${way1}1", "", $"*${way2+1}", "",
                        $"*${way1}1", "", "", "",         "", "", "", "",

                        $"*${way1+1}", "", $"*${way2+2}1", "",         $"*${way1+1}", "", $"*${way2+3}1", "",
                        $"*${way1+1}", "", $"*${way2+0}1", "",         $"*${way1+1}", "", $"*${way2+1}1", "",
                        $"*${way1+1}", "", $"*${way2+2}1", "",         $"*${way1+1}", "", $"*${way2+3}1", "",
                        $"*${way1+1}", "", "", "",         "", "", "", "",

                        $"*${way1+2}1", "", $"*${way2+0}", "",         $"*${way1+2}1", "", $"*${way2+1}", "",
                        $"*${way1+2}1", "", $"*${way2+2}", "",         $"*${way1+2}1", "", $"*${way2+3}", "",
                        $"*${way1+2}1", "", $"*${way2+0}", "",         $"*${way1+2}1", "", $"*${way2+1}", "",
                        $"*${way1+2}1", "", "", "",         "", "", "", "",

                        $"*${way1+3}", "", $"*${way2+2}1", "",         $"*${way1+3}", "", $"*${way2+3}1", "",
                        $"*${way1+3}", "", $"*${way2+0}1", "",         $"*${way1+3}", "", $"*${way2+1}1", "",
                        $"*${way1+3}", "", $"*${way2+2}1", "",         $"*${way1+3}", "", $"*${way2+3}1", "",
                        $"*${way1+3}", "", "", "",         "", "", "", "",

                        "(R)(D1)", "", "", "",         "(R)(D1)", "", "", "",
                        "(R)(D1)", "", "", "",         "(R)(D1)", "", "", "",
                        "(R)(D1)", "", "", "",         "(R)(D1)", "", "", "",
                        "(R)(D1)", "", "", "",         "(R)(D1)", "", "", "",

                        "(D)(+01'1.2)", "", "", "",         "(D)(+01'1.2)", "", "", "",
                        "(D)(+01'1.2)", "", "", "",         "(D)(+01'1.2)", "", "", "",
                        "(D)(+01'1.2)", "", "", "",         "(D)(+01'1.2)", "", "", "",
                        "(D)(+01'1.2)", "", "", "",         "(D)(+01'1.2)", "", "", "",

                        "$0'1.2", "", "$2'1.2", "",         "$0'1.2", "", "$2'1.2", "",
                        "$01'1.2", "", "$21'1.2", "",         "$01'1.2", "", "$21'1.2", "",
                        "$0'1.2", "", "$2'1.2", "",         "$0'1.2", "", "$2'1.2", "",
                        "$01'1.2", "", "$21'1.2", "",         "$01'1.2", "", "$21'1.2", "",

                        "$01'1.2", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                    });
                }
                if (InBeat(124))
                {
                    Arrow.UnitEasing eA = new();
                    AddInstance(eA);
                    eA.ApplyTime = BeatTime(32f);
                    eA.TagApply("A");

                    eA.PositionEase = LinkEase(
                        Stable(T(28),0,280),
                        Linear(T(2), new Vector2(0,280),new Vector2(0, 180)),
                        EaseOut(T(0.5f), new Vector2(0, 180),new Vector2(0, 40), EaseState.Quad),
                        Linear(T(1.5f), new Vector2(0, 40), new Vector2(0, 0))
                        );
                    CreateChart(T(4), T(1), 5f, new string[]
                    {
                        "(*$0)(*$11'0@A)", "", "", "",         "(*$0)", "", "", "",
                        "(*$0)", "", "", "",         "(*$0)", "", "", "",
                        "(*$0)(*$11'0@A)", "", "", "",         "", "", "", "",
                        "(*$0)", "", "", "",         "(*$0)", "", "", "",

                        "(*$2)(*$11'0@A)", "", "", "",         "(*$2)", "", "", "",
                        "(*$2)", "", "", "",         "(*$2)", "", "", "",
                        "(*$2)(*$11'0@A)", "", "", "",         "(*$2)", "", "", "",
                        "(*$2)", "", "", "",         "(*$2)", "", "", "",

                        "(*$0)(*$11'0@A)", "", "", "",         "(*$0)", "", "", "",
                        "(*$0)", "", "", "",         "(*$0)", "", "", "",
                        "(*$0)(*$11'0@A)", "", "", "",         "", "", "", "",
                        "(*$0)", "", "", "",         "(*$0)", "", "", "",

                        "(*$2)(*$11'0@A)", "", "", "",         "(*$2)", "", "(*$11)", "",
                        "(*$2)", "", "", "",         "", "", "", "",
                        "(*$2)(*$0)(*$11'0@A)", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",

                        "(*$2)(*$0)", "", "", "",         "", "", "", "",
                        "", "", "", "",         "(*$11)", "", "", "",
                        "(*$01)(*$1'0@A)", "", "", "",         "(*$01)", "", "", "",
                        "(*$01)", "", "", "",         "(*$01)", "", "", "",

                        "(*$21)(*$1'0@A)", "", "", "",         "(*$21)", "", "", "",
                        "(*$21)", "", "", "",         "(*$21)", "", "", "",
                        "(*$21)(*$1'0@A)", "", "", "",         "(*$21)", "", "", "",
                        "(*$21)", "", "", "",         "(*$21)", "", "", "",

                        "(*$01)(*$1'0@A)", "", "", "",         "(*$01)", "", "", "",
                        "(*$01)", "", "", "",         "(*$01)", "", "", "",
                        "(*$01)(*$1'0@A)", "", "", "",         "(*$01)", "", "", "",
                        "(*$01)", "", "", "",         "(*$01)", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                    });
                }
                if (InBeat(156))
                {
                    CreateChart(0, T(1), 6.5f, new string[]
                    {
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",

                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                        "", "", "", "",         "", "", "", "",
                    });
                }
            }

            public void ExtremePlus()
            {
                
            }

            public void Hard()
            {
                
            }

            public void Noob()
            {
                
            }

            public void Normal()
            {
                
            }
        }
    }
}
